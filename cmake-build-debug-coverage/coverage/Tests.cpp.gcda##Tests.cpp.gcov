        -:    0:Source:/home/octav/CLionProjects/SimularePlanete/Tests.cpp
        -:    0:Graph:/home/octav/CLionProjects/SimularePlanete/cmake-build-debug-coverage/CMakeFiles/SimularePlanete.dir/Tests.cpp.gcno
        -:    0:Data:/home/octav/CLionProjects/SimularePlanete/cmake-build-debug-coverage/CMakeFiles/SimularePlanete.dir/Tests.cpp.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include "Tests.h"
        -:    3:
function _ZN5Tests7testAllEv called 1 returned 100% blocks executed 100%
        1:    4:void Tests::testAll() {
        1:    5:    testDomain();
        1:    5-block  0
call    0 returned 1
        1:    6:    testRepository();
call    0 returned 1
        1:    7:    testService();
call    0 returned 1
        1:    8:}
        -:    9:
function _ZN5Tests10testDomainEv called 1 returned 100% blocks executed 57%
        1:   10:void Tests::testDomain() {
        1:   11:    Planet planet1;
        1:   11-block  0
call    0 returned 1
        2:   12:    Planet planet2 = Planet(1,"1","1",1,1);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   12-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   12-block  1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 returned 1
call   13 returned 1
    $$$$$:   12-block  2
    $$$$$:   12-block  3
    $$$$$:   12-block  4
    $$$$$:   12-block  5
       1*:   13:    assert(planet2.getCode() == 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   13-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   13-block  1
call    5 never executed
       1*:   14:    assert(planet2.getName() == "1");
        1:   14-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   14-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   14-block  2
call    6 never executed
        1:   14-block  3
call    7 returned 1
       1*:   15:    assert(planet2.getDiameter() == 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   15-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   15-block  1
call    5 never executed
       1*:   16:    assert(planet2.getMass() == 1);
        1:   16-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   16-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   16-block  2
call    5 never executed
       1*:   17:    assert(planet2.getSolarSystem() == "1");
        1:   17-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   17-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   17-block  2
call    6 never executed
        1:   17-block  3
call    7 returned 1
        1:   18:}
call    0 returned 1
call    1 returned 1
    $$$$$:   18-block  0
call    2 never executed
    $$$$$:   18-block  1
call    3 never executed
        -:   19:
function _ZN5Tests14testRepositoryEv called 1 returned 100% blocks executed 58%
        1:   20:void Tests::testRepository() {
        2:   21:    Repository repository = Repository("tests.txt");
        1:   21-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   21-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:   21-block  2
    $$$$$:   21-block  3
       1*:   22:    assert(repository.getAllPlanets().size() == 3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   22-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   22-block  1
call    6 never executed
        1:   22-block  2
call    7 returned 1
       1*:   23:    assert(repository.getPlanet(1111).getSolarSystem() == "Solar1");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   23-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   23-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   23-block  2
call    9 never executed
        1:   23-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   23-block  4
call   12 never executed
    $$$$$:   23-block  5
        -:   24:    try {
       1*:   25:        repository.getPlanet(5251);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    %%%%%:   25-block  0
call    3 never executed
    #####:   26:        assert(false);
call    0 never executed
        -:   27:    }
        1:   28:    catch (RepositoryException &e) {
        1:   28-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   28-block  1
call    2 returned 1
        1:   29:        assert(e.what() == "Planet does not exist");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   29-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:   29-block  1
call    6 never executed
        1:   29-block  2
call    7 returned 1
        1:   30:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   30-block  0
call    3 never executed
        1:   31:}
        1:   31-block  0
call    0 returned 1
    $$$$$:   31-block  1
call    1 never executed
        -:   32:
function _ZN5Tests11testServiceEv called 1 returned 100% blocks executed 67%
        1:   33:void Tests::testService() {
        2:   34:    Repository repository = Repository("tests.txt");
        1:   34-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   34-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:   34-block  2
    $$$$$:   34-block  3
        1:   35:    Service service = Service(repository);
call    0 returned 1
       1*:   36:    assert(service.getAllPlanets().size() == 3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   36-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   36-block  1
call    6 never executed
        1:   36-block  2
call    7 returned 1
       1*:   37:    assert(service.getPlanet(1111).getSolarSystem() == "Solar1");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   37-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   37-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   37-block  2
call    9 never executed
        1:   37-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   37-block  4
call   12 never executed
    $$$$$:   37-block  5
        -:   38:    try {
       1*:   39:        service.getPlanet(5251);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    %%%%%:   39-block  0
call    3 never executed
    #####:   40:        assert(false);
call    0 never executed
        -:   41:    }
        1:   42:    catch (RepositoryException &e) {
        1:   42-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   42-block  1
call    2 returned 1
        -:   43:        assert(true);
        1:   44:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   45:
        1:   46:    vector<Planet> res = service.sortByName();
        1:   46-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   47:    assert(res[0].getName() == "Marte");
        1:   47-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   47-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    $$$$$:   47-block  2
call    7 never executed
        1:   47-block  3
call    8 returned 1
        1:   48:    assert(res[1].getName() == "Pluto");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   48-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    $$$$$:   48-block  1
call    7 never executed
        1:   48-block  2
call    8 returned 1
        1:   49:    assert(res[2].getName() == "Terra");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   49-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    $$$$$:   49-block  1
call    7 never executed
        1:   49-block  2
call    8 returned 1
        -:   50:
        1:   51:    res = service.sortByDiameter();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   51-block  0
call    3 returned 1
call    4 returned 1
        1:   52:    assert(res[0].getDiameter() == 2000);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   52-block  0
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:   52-block  1
call    6 never executed
        1:   53:    assert(res[1].getDiameter() == 3000);
        1:   53-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   53-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:   53-block  2
call    6 never executed
        1:   54:    assert(res[2].getDiameter() == 4000);
        1:   54-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   54-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:   54-block  2
call    6 never executed
        -:   55:
        1:   56:    res = service.sortByMass();
        1:   56-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   56-block  1
call    3 returned 1
call    4 returned 1
        1:   57:    assert(res[0].getMass() == 1000);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   57-block  0
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:   57-block  1
call    6 never executed
        1:   58:    assert(res[1].getMass() == 1500);
        1:   58-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   58-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:   58-block  2
call    6 never executed
        1:   59:    assert(res[2].getMass() == 1600);
        1:   59-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   59-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:   59-block  2
call    6 never executed
        -:   60:
        1:   61:    auto res2 = service.getPlanetBySolarSystem();
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   62:    assert(res2["Solar1"].size() == 2);
        1:   62-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   62-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   62-block  2
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    $$$$$:   62-block  3
call   10 never executed
        1:   62-block  4
call   11 returned 1
call   12 returned 1
    $$$$$:   62-block  5
call   13 never executed
    $$$$$:   62-block  6
    $$$$$:   62-block  7
call   14 never executed
    $$$$$:   62-block  8
        -:   63:
        1:   64:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   64-block  0
call    3 never executed
    $$$$$:   64-block  1
call    4 never executed
    $$$$$:   64-block  2
call    5 never executed
